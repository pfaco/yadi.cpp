#include "catch.hpp"
#include <yadi/cosem_serializer.h>

TEST_CASE("UINT8 Encode")
{
    auto verify = [](uint8_t value, const std::vector<uint8_t> &expected) {
        std::vector<uint8_t> buffer;
        dlms::CosemSerializer serializer(buffer);
        serializer.uint8(value);
        REQUIRE(buffer == expected);
    };
    
    verify(0x00, {0x11, 0x00});
    verify(0x01, {0x11, 0x01});
    verify(0x02, {0x11, 0x02});
    verify(0x09, {0x11, 0x09});
    verify(0x0A, {0x11, 0x0A});
    verify(0x10, {0x11, 0x10});
    verify(0x15, {0x11, 0x15});
    verify(0x68, {0x11, 0x68});
    verify(0xFF, {0x11, 0xFF});
}

TEST_CASE("UINT16 Encode")
{
    auto verify = [](uint16_t value, const std::vector<uint8_t> &expected) {
        std::vector<uint8_t> buffer;
        dlms::CosemSerializer serializer(buffer);
        serializer.uint16(value);
        REQUIRE(buffer == expected);
    };
    
    verify(0x0000, {0x12, 0x00, 0x00});
    verify(0x0001, {0x12, 0x00, 0x01});
    verify(0x0002, {0x12, 0x00, 0x02});
    verify(0x0009, {0x12, 0x00, 0x09});
    verify(0x000A, {0x12, 0x00, 0x0A});
    verify(0x0010, {0x12, 0x00, 0x10});
    verify(0x00FF, {0x12, 0x00, 0xFF});
    verify(0x10FF, {0x12, 0x10, 0xFF});
    verify(0x01FA, {0x12, 0x01, 0xFA});
    verify(0x5431, {0x12, 0x54, 0x31});
    verify(0x6847, {0x12, 0x68, 0x47});
    verify(0xADE2, {0x12, 0xAD, 0xE2});
    verify(0xFFFF, {0x12, 0xFF, 0xFF});
}